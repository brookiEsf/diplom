<?php

namespace common\models;

use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "products".
 *
 * @property int $id
 * @property string $prod_name
 * @property string $prod_definition
 * @property int $price
 * @property string $date_deleted
 * @property string $date_created
 * @property string $date_updated
 * @property int $status
 * @property int $seo_id
 *
 * @property ProductsCategory[] $productsCategories
 * @property Categories[] $categories
 * @property ProductsImages[] $productsImages
 * @property Images[] $images
 */
class Products extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'products';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['prod_name', 'prod_definition'], 'required'],
            [['price', 'status', 'seo_id'], 'integer'],
            [['date_deleted', 'date_created', 'date_updated'], 'safe'],
            [['prod_name'], 'string', 'max' => 95],
            [['prod_definition'], 'string', 'max' => 325],
            [['prod_name'], 'unique'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'prod_name' => 'Prod Name',
            'prod_definition' => 'Prod Definition',
            'price' => 'Price',
            'date_deleted' => 'Date Deleted',
            'date_created' => 'Date Created',
            'date_updated' => 'Date Updated',
            'status' => 'Status',
            'seo_id' => 'Seo ID',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductsCategories()
    {
        return $this->hasMany(ProductsCategory::className(), ['products_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategories()
    {
        return $this->hasMany(Categories::className(), ['id' => 'category_id'])->viaTable('products_category', ['products_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductsImages()
    {
        return $this->hasMany(ProductsImages::className(), ['products_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getImages()
    {
        return $this->hasMany(Images::className(), ['id' => 'images_id'])->viaTable('products_images', ['products_id' => 'id']);
    }

    public function getAllCategoriesAsArray()
    {
        $categories = \app\models\Categories::find()->all();
        $dropdownData = ArrayHelper::map($categories, 'id', 'cat_name');
        return $dropdownData;
    }
    public function afterSave($insert, $changedAttributes)
    {
        if (isset($this->selected_categories)) {
            if ($insert == false) {
                $this->unlinkAll('categories', true);
            }
            foreach ($this->selected_categories as $category_id) {
                $temp = Categories::findOne($category_id);
                $this->link('categories', $temp);
            }
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
    public function delete()
    {
        $this->date_deleted = time();
        $this->save();
        return true;
//        return parent::Delete(); // TODO: Change the autogenerated stub
    }

}
